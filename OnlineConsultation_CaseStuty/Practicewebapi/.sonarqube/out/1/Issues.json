{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "3.11.0.0",
        "fileVersion": "3.11.0-4.21403.6 (ae1fff34)",
        "semanticVersion": "3.11.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/BookingController.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 9,
                  "endLine": 14,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/BookingController.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 13,
                  "endLine": 18,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/BookingController.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 9,
                  "endLine": 24,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/FeedbackController.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 9,
                  "endLine": 14,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/FeedbackController.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 13,
                  "endLine": 18,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/PrescriptionController.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 9,
                  "endLine": 14,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/PrescriptionController.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 13,
                  "endLine": 18,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Models/Doctor.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 9,
                  "endLine": 11,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Models/Doctor.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 9,
                  "endLine": 24,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Models/PracticedbContext.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 9,
                  "endLine": 24,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Models/PracticedbContext.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 13,
                  "endLine": 85,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Models/PracticedbContext.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 17,
                  "endLine": 163,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Models/PracticedbContext.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 13,
                  "endLine": 173,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Models/Prescription.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 9,
                  "endLine": 15,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Services/BookingServices.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 9,
                  "endLine": 20,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Services/IBookingServices.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 9,
                  "endLine": 11,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_registration' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/FeedbackController.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 35,
                  "endLine": 13,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_registration' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/PrescriptionController.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 39,
                  "endLine": 13,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_registration' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/BookingController.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 34,
                  "endLine": 13,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_registration' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/DoctorController.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_database' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/DoctorController.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 35,
                  "endLine": 14,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Program.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 18,
                  "endLine": 12,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_DbContext' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Services/BookingServices.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 35,
                  "endLine": 13,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_DbContext' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Services/FeedbackServices.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 35,
                  "endLine": 13,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_DbContext' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Services/PrescriptionServices.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 35,
                  "endLine": 13,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_DbContext' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Services/DoctorregistrationServices.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 35,
                  "endLine": 14,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3251",
          "level": "warning",
          "message": "Supply an implementation for this partial method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Models/PracticedbContext.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 9,
                  "endLine": 225,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1155",
          "level": "warning",
          "message": "Use '.Any()' to test whether this 'IEnumerable<Practiceapi.Models.FeedBack>' is empty or not.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/FeedbackController.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 25,
                  "endLine": 25,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1155",
          "level": "warning",
          "message": "Use '.Any()' to test whether this 'IEnumerable<Practiceapi.Models.Booking>' is empty or not.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/BookingController.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 25,
                  "endLine": 38,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1155",
          "level": "warning",
          "message": "Use '.Any()' to test whether this 'IEnumerable<Practiceapi.Models.Prescription>' is empty or not.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/PrescriptionController.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 25,
                  "endLine": 42,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1827",
          "level": "note",
          "message": "Count() is used where Any() could be used instead to improve performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/BookingController.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 17,
                  "endLine": 38,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "OperationKey": "OperationBinaryLeft"
            }
          }
        },
        {
          "ruleId": "CA1827",
          "level": "note",
          "message": "Count() is used where Any() could be used instead to improve performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/PrescriptionController.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 17,
                  "endLine": 42,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "OperationKey": "OperationBinaryLeft"
            }
          }
        },
        {
          "ruleId": "CA1827",
          "level": "note",
          "message": "Count() is used where Any() could be used instead to improve performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/FeedbackController.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 25,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "OperationKey": "OperationBinaryLeft"
            }
          }
        },
        {
          "ruleId": "S1155",
          "level": "warning",
          "message": "Use '.Any()' to test whether this 'IEnumerable<Practiceapi.Models.Doctor>' is empty or not.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/DoctorController.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 25,
                  "endLine": 82,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1827",
          "level": "note",
          "message": "Count() is used where Any() could be used instead to improve performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Controllers/DoctorController.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 17,
                  "endLine": 82,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "OperationKey": "OperationBinaryLeft"
            }
          }
        },
        {
          "ruleId": "S3251",
          "level": "warning",
          "message": "Supply an implementation for the partial method, otherwise this call will be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///E:/Practicewebapi/Practiceapi/Models/PracticedbContext.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 13,
                  "endLine": 222,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1827": {
          "id": "CA1827",
          "shortDescription": "Do not use Count() or LongCount() when Any() can be used",
          "fullDescription": "For non-empty collections, Count() and LongCount() enumerate the entire sequence, while Any() stops at the first item or the first item that satisfies a condition.",
          "defaultLevel": "note",
          "helpUri": "https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1827",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Utility classes, which are collections of static members, are not meant to be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S1155": {
          "id": "S1155",
          "shortDescription": "\"Any()\" should be used to test for emptiness",
          "fullDescription": "Using .Count() to test for emptiness works, but using .Any() makes the intent clearer, and the code more readable. However, there are some cases where special attention should be paid:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1155",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S2933": {
          "id": "S2933",
          "shortDescription": "Fields that are only assigned in the constructor should be \"readonly\"",
          "fullDescription": "readonly fields can only be assigned in a class constructor. If a class has a field that’s not marked readonly but is only set in the constructor, it could cause confusion about the field’s intended use. To avoid confusion, such fields should be marked readonly to make their intended use explicit, and to prevent future maintainers from inadvertently changing their use.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2933",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3251": {
          "id": "S3251",
          "shortDescription": "Implementations should be provided for \"partial\" methods",
          "fullDescription": "partial methods allow an increased degree of flexibility in programming a system. Hooks can be added to generated code by invoking methods that define their signature, but might not have an implementation yet. But if the implementation is still missing when the code makes it to production, the compiler silently removes the call. In the best case scenario, such calls simply represent cruft, but in they worst case they are critical, missing functionality, the loss of which will lead to unexpected results at runtime.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3251",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope"
            ]
          }
        }
      }
    }
  ]
}